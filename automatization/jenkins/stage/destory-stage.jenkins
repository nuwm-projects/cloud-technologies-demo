#!groovy
properties([
        disableConcurrentBuilds(),
        pipelineTriggers()
])

pipeline {
    agent {
        label 'cloud-tech'
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("Stop application") {
            steps {
                dir("/var/builds/cloud-technologies-demo") {
                    script {
                        sh 'git pull'
                        sh 'aws s3 rm --recursive s3://stage-counter.my-services.com.ua/'
                    }
                }
                dir("/var/builds/cloud-technologies-demo/automatization/infrastructure/terraform") {
                    script {
                        sh 'terraform destroy -auto-approve'
                    }
                }
            }
        }
    }
    post {
        always {
            withCredentials([string(credentialsId: 'DISCORD_WEB_HOOK', variable: 'WEB_HOOK_ID')]) {
                discordSend description: "Application for testing deployment \n" + "Result: " + currentBuild.currentResult,
                        footer: "",
                        link: env.BUILD_URL,
                        result: currentBuild.currentResult,
                        title: JOB_NAME,
                        webhookURL: "https://discord.com/api/webhooks/" + WEB_HOOK_ID
            }
        }
    }
}
